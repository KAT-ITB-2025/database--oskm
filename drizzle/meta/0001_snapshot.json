{
  "id": "ed734553-e823-4b4d-a6bb-509af974e1f8",
  "prevId": "58352a96-e27d-4d82-97a3-01e3783c49b3",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.endpoint_analytics": {
      "name": "endpoint_analytics",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "endpoint": {
          "name": "endpoint",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "method": {
          "name": "method",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status_code": {
          "name": "status_code",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "response_time_ms": {
          "name": "response_time_ms",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "url_query": {
          "name": "url_query",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "request_body": {
          "name": "request_body",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "error_message": {
          "name": "error_message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "endpoint_analytics_user_id_users_id_fk": {
          "name": "endpoint_analytics_user_id_users_id_fk",
          "tableFrom": "endpoint_analytics",
          "columnsFrom": [
            "user_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "set null"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.accounts": {
      "name": "accounts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "nim": {
          "name": "nim",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "accounts_role_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'user'"
        },
        "last_logged_in": {
          "name": "last_logged_in",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "accounts_nim_unique": {
          "name": "accounts_nim_unique",
          "columns": [
            "nim"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.email_verification_otps": {
      "name": "email_verification_otps",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "otp": {
          "name": "otp",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "email_verification_otps_user_id_users_id_fk": {
          "name": "email_verification_otps_user_id_users_id_fk",
          "tableFrom": "email_verification_otps",
          "columnsFrom": [
            "user_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "nim": {
          "name": "nim",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "fakultas": {
          "name": "fakultas",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "keluarga": {
          "name": "keluarga",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "bata": {
          "name": "bata",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "rumpun": {
          "name": "rumpun",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "foto_media_id": {
          "name": "foto_media_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "users_id_accounts_id_fk": {
          "name": "users_id_accounts_id_fk",
          "tableFrom": "users",
          "columnsFrom": [
            "id"
          ],
          "tableTo": "accounts",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "users_foto_media_id_media_id_fk": {
          "name": "users_foto_media_id_media_id_fk",
          "tableFrom": "users",
          "columnsFrom": [
            "foto_media_id"
          ],
          "tableTo": "media",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_nim_unique": {
          "name": "users_nim_unique",
          "columns": [
            "nim"
          ],
          "nullsNotDistinct": false
        },
        "users_email_unique": {
          "name": "users_email_unique",
          "columns": [
            "email"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.verification_token": {
      "name": "verification_token",
      "schema": "",
      "columns": {
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expired_at": {
          "name": "expired_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "verification_token_identifier_users_email_fk": {
          "name": "verification_token_identifier_users_email_fk",
          "tableFrom": "verification_token",
          "columnsFrom": [
            "identifier"
          ],
          "tableTo": "users",
          "columnsTo": [
            "email"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {
        "verification_token_identifier_token_pk": {
          "name": "verification_token_identifier_token_pk",
          "columns": [
            "identifier",
            "token"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.class_registrations": {
      "name": "class_registrations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "class_id": {
          "name": "class_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "registered_at": {
          "name": "registered_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "class_registrations_user_id_users_id_fk": {
          "name": "class_registrations_user_id_users_id_fk",
          "tableFrom": "class_registrations",
          "columnsFrom": [
            "user_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "class_registrations_class_id_classes_id_fk": {
          "name": "class_registrations_class_id_classes_id_fk",
          "tableFrom": "class_registrations",
          "columnsFrom": [
            "class_id"
          ],
          "tableTo": "classes",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.classes": {
      "name": "classes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "class_name": {
          "name": "class_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "room": {
          "name": "room",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "total_quota": {
          "name": "total_quota",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "mentor_id": {
          "name": "mentor_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "class_type": {
          "name": "class_type",
          "type": "class_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "classes_mentor_id_users_id_fk": {
          "name": "classes_mentor_id_users_id_fk",
          "tableFrom": "classes",
          "columnsFrom": [
            "mentor_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.attendances": {
      "name": "attendances",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "attendance_type": {
          "name": "attendance_type",
          "type": "attendance_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "day_number": {
          "name": "day_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "start_time": {
          "name": "start_time",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "duration_minutes": {
          "name": "duration_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profil_kat_attendance": {
      "name": "profil_kat_attendance",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "profil_kat_id": {
          "name": "profil_kat_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "attendance_id": {
          "name": "attendance_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profil_kat_attendance_profil_kat_id_profil_kats_id_fk": {
          "name": "profil_kat_attendance_profil_kat_id_profil_kats_id_fk",
          "tableFrom": "profil_kat_attendance",
          "columnsFrom": [
            "profil_kat_id"
          ],
          "tableTo": "profil_kats",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "profil_kat_attendance_attendance_id_attendances_id_fk": {
          "name": "profil_kat_attendance_attendance_id_attendances_id_fk",
          "tableFrom": "profil_kat_attendance",
          "columnsFrom": [
            "attendance_id"
          ],
          "tableTo": "attendances",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_attendance": {
      "name": "user_attendance",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "schedule_id": {
          "name": "schedule_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "attendance_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'tidak_hadir'"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_attendance_schedule_id_attendances_id_fk": {
          "name": "user_attendance_schedule_id_attendances_id_fk",
          "tableFrom": "user_attendance",
          "columnsFrom": [
            "schedule_id"
          ],
          "tableTo": "attendances",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "user_attendance_user_id_users_id_fk": {
          "name": "user_attendance_user_id_users_id_fk",
          "tableFrom": "user_attendance",
          "columnsFrom": [
            "user_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.media": {
      "name": "media",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "creator_id": {
          "name": "creator_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "bucket": {
          "name": "bucket",
          "type": "media_bucket_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "media_creator_id_users_id_fk": {
          "name": "media_creator_id_users_id_fk",
          "tableFrom": "media",
          "columnsFrom": [
            "creator_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.assignments_profil": {
      "name": "assignments_profil",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "profil_kat_id": {
          "name": "profil_kat_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "assignment_media_id": {
          "name": "assignment_media_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "due_date": {
          "name": "due_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "is_open": {
          "name": "is_open",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "start_date": {
          "name": "start_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "assignments_profil_profil_kat_id_profil_kats_id_fk": {
          "name": "assignments_profil_profil_kat_id_profil_kats_id_fk",
          "tableFrom": "assignments_profil",
          "columnsFrom": [
            "profil_kat_id"
          ],
          "tableTo": "profil_kats",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "assignments_profil_assignment_media_id_media_id_fk": {
          "name": "assignments_profil_assignment_media_id_media_id_fk",
          "tableFrom": "assignments_profil",
          "columnsFrom": [
            "assignment_media_id"
          ],
          "tableTo": "media",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profil_kats": {
      "name": "profil_kats",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "profil_number": {
          "name": "profil_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "stage_weight": {
          "name": "stage_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "quiz_weight": {
          "name": "quiz_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "assignment_weight": {
          "name": "assignment_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "attendance_weight": {
          "name": "attendance_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "profil_kats_profil_number_unique": {
          "name": "profil_kats_profil_number_unique",
          "columns": [
            "profil_number"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.submissions_profil": {
      "name": "submissions_profil",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "assignment_id": {
          "name": "assignment_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "submission_media_id": {
          "name": "submission_media_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "score": {
          "name": "score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "submissions_profil_assignment_id_assignments_profil_id_fk": {
          "name": "submissions_profil_assignment_id_assignments_profil_id_fk",
          "tableFrom": "submissions_profil",
          "columnsFrom": [
            "assignment_id"
          ],
          "tableTo": "assignments_profil",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "submissions_profil_user_id_users_id_fk": {
          "name": "submissions_profil_user_id_users_id_fk",
          "tableFrom": "submissions_profil",
          "columnsFrom": [
            "user_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "submissions_profil_submission_media_id_media_id_fk": {
          "name": "submissions_profil_submission_media_id_media_id_fk",
          "tableFrom": "submissions_profil",
          "columnsFrom": [
            "submission_media_id"
          ],
          "tableTo": "media",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.stages": {
      "name": "stages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "profil_id": {
          "name": "profil_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "stage_number": {
          "name": "stage_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "stages_profil_id_profil_kats_id_fk": {
          "name": "stages_profil_id_profil_kats_id_fk",
          "tableFrom": "stages",
          "columnsFrom": [
            "profil_id"
          ],
          "tableTo": "profil_kats",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_stage_progress": {
      "name": "user_stage_progress",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "stage_id": {
          "name": "stage_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "quiz_score": {
          "name": "quiz_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_stage_progress_user_id_users_id_fk": {
          "name": "user_stage_progress_user_id_users_id_fk",
          "tableFrom": "user_stage_progress",
          "columnsFrom": [
            "user_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "user_stage_progress_stage_id_stages_id_fk": {
          "name": "user_stage_progress_stage_id_stages_id_fk",
          "tableFrom": "user_stage_progress",
          "columnsFrom": [
            "stage_id"
          ],
          "tableTo": "stages",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.question_answer_options": {
      "name": "question_answer_options",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "question_id": {
          "name": "question_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "answer_text": {
          "name": "answer_text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_correct": {
          "name": "is_correct",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "question_answer_options_question_id_questions_id_fk": {
          "name": "question_answer_options_question_id_questions_id_fk",
          "tableFrom": "question_answer_options",
          "columnsFrom": [
            "question_id"
          ],
          "tableTo": "questions",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.questions": {
      "name": "questions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "stage_id": {
          "name": "stage_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "question_text": {
          "name": "question_text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "question_type": {
          "name": "question_type",
          "type": "question_type_enum",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "questions_stage_id_stages_id_fk": {
          "name": "questions_stage_id_stages_id_fk",
          "tableFrom": "questions",
          "columnsFrom": [
            "stage_id"
          ],
          "tableTo": "stages",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.activities": {
      "name": "activities",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "day": {
          "name": "day",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "start_time": {
          "name": "start_time",
          "type": "time",
          "primaryKey": false,
          "notNull": true
        },
        "end_time": {
          "name": "end_time",
          "type": "time",
          "primaryKey": false,
          "notNull": true
        },
        "location": {
          "name": "location",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "geolocation": {
          "name": "geolocation",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.messages": {
      "name": "messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "user_match_id": {
          "name": "user_match_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "sender_id": {
          "name": "sender_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "messages_user_match_id_user_matches_id_fk": {
          "name": "messages_user_match_id_user_matches_id_fk",
          "tableFrom": "messages",
          "columnsFrom": [
            "user_match_id"
          ],
          "tableTo": "user_matches",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        },
        "messages_sender_id_users_id_fk": {
          "name": "messages_sender_id_users_id_fk",
          "tableFrom": "messages",
          "columnsFrom": [
            "sender_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_matches": {
      "name": "user_matches",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "topic": {
          "name": "topic",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "is_anonymous": {
          "name": "is_anonymous",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "is_revealed": {
          "name": "is_revealed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "first_user_id": {
          "name": "first_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "second_user_id": {
          "name": "second_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "last_message": {
          "name": "last_message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_matches_first_user_id_users_id_fk": {
          "name": "user_matches_first_user_id_users_id_fk",
          "tableFrom": "user_matches",
          "columnsFrom": [
            "first_user_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        },
        "user_matches_second_user_id_users_id_fk": {
          "name": "user_matches_second_user_id_users_id_fk",
          "tableFrom": "user_matches",
          "columnsFrom": [
            "second_user_id"
          ],
          "tableTo": "users",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.accounts_role_enum": {
      "name": "accounts_role_enum",
      "schema": "public",
      "values": [
        "admin",
        "mamet",
        "mentor",
        "user",
        "guest",
        "hr"
      ]
    },
    "public.class_enum": {
      "name": "class_enum",
      "schema": "public",
      "values": [
        "sesi_1",
        "sesi_2"
      ]
    },
    "public.attendance_status": {
      "name": "attendance_status",
      "schema": "public",
      "values": [
        "hadir",
        "tidak_hadir"
      ]
    },
    "public.attendance_type": {
      "name": "attendance_type",
      "schema": "public",
      "values": [
        "opening",
        "closing"
      ]
    },
    "public.media_bucket_enum": {
      "name": "media_bucket_enum",
      "schema": "public",
      "values": [
        "profile",
        "content",
        "documents",
        "uploads",
        "assignment"
      ]
    },
    "public.status": {
      "name": "status",
      "schema": "public",
      "values": [
        "completed",
        "not_completed"
      ]
    },
    "public.question_type_enum": {
      "name": "question_type_enum",
      "schema": "public",
      "values": [
        "multiple_choice",
        "short_answer"
      ]
    }
  },
  "schemas": {},
  "views": {
    "public.user_ranking_view": {
      "name": "user_ranking_view",
      "schema": "public",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "nim": {
          "name": "nim",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "fakultas": {
          "name": "fakultas",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "keluarga": {
          "name": "keluarga",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "bata": {
          "name": "bata",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "rumpun": {
          "name": "rumpun",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "foto_media_id": {
          "name": "foto_media_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "profil1_quiz_weight": {
          "name": "profil1_quiz_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil1_quiz_score": {
          "name": "profil1_quiz_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil1_assignment_weight": {
          "name": "profil1_assignment_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil1_avg_assignment_score": {
          "name": "profil1_avg_assignment_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil1_attendance_weight": {
          "name": "profil1_attendance_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil1_avg_attendance_score": {
          "name": "profil1_avg_attendance_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil1_total_score": {
          "name": "profil1_total_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil2_quiz_weight": {
          "name": "profil2_quiz_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil2_quiz_score": {
          "name": "profil2_quiz_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil2_assignment_weight": {
          "name": "profil2_assignment_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil2_avg_assignment_score": {
          "name": "profil2_avg_assignment_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil2_attendance_weight": {
          "name": "profil2_attendance_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil2_avg_attendance_score": {
          "name": "profil2_avg_attendance_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil2_total_score": {
          "name": "profil2_total_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil3_quiz_weight": {
          "name": "profil3_quiz_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil3_quiz_score": {
          "name": "profil3_quiz_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil3_assignment_weight": {
          "name": "profil3_assignment_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil3_avg_assignment_score": {
          "name": "profil3_avg_assignment_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil3_attendance_weight": {
          "name": "profil3_attendance_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil3_avg_attendance_score": {
          "name": "profil3_avg_attendance_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil3_total_score": {
          "name": "profil3_total_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil4_quiz_weight": {
          "name": "profil4_quiz_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil4_quiz_score": {
          "name": "profil4_quiz_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil4_assignment_weight": {
          "name": "profil4_assignment_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil4_avg_assignment_score": {
          "name": "profil4_avg_assignment_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil4_attendance_weight": {
          "name": "profil4_attendance_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil4_avg_attendance_score": {
          "name": "profil4_avg_attendance_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil4_total_score": {
          "name": "profil4_total_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil5_quiz_weight": {
          "name": "profil5_quiz_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil5_quiz_score": {
          "name": "profil5_quiz_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil5_assignment_weight": {
          "name": "profil5_assignment_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil5_avg_assignment_score": {
          "name": "profil5_avg_assignment_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil5_attendance_weight": {
          "name": "profil5_attendance_weight",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil5_avg_attendance_score": {
          "name": "profil5_avg_attendance_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "profil5_total_score": {
          "name": "profil5_total_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "total_score": {
          "name": "total_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "total_weighted_score": {
          "name": "total_weighted_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "tiebreaker_score": {
          "name": "tiebreaker_score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "last_activity_at": {
          "name": "last_activity_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "attendance_total": {
          "name": "attendance_total",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "ranking": {
          "name": "ranking",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "definition": "\n  WITH user_assignment_scores AS (\n    SELECT \n      u.id as user_id,\n      pk.profil_number,\n      COALESCE(AVG(sp.score), 0) as avg_assignment_score,\n      MAX(sp.created_at) as last_assignment_at,\n      -- Tiebreaker: sum of milliseconds from due date to submission (earlier = higher score)\n      COALESCE(SUM(EXTRACT(EPOCH FROM (ap.due_date - sp.created_at)) * 1000), 0) as assignment_timing_score\n    FROM users u\n    INNER JOIN accounts a ON a.id = u.id\n    CROSS JOIN profil_kats pk \n    LEFT JOIN assignments_profil ap ON ap.profil_kat_id = pk.id\n    LEFT JOIN submissions_profil sp ON sp.assignment_id = ap.id AND sp.user_id = u.id\n    WHERE pk.profil_number IN (1, 2, 3, 4, 5)\n      AND a.role = 'user'\n    GROUP BY u.id, pk.profil_number\n  ),\n  user_quiz_scores AS (\n    SELECT \n      u.id as user_id,\n      pk.profil_number,\n      COALESCE(pk.quiz_weight, 0.0) as quiz_weight,\n      COALESCE(pk.assignment_weight, 0.0) as assignment_weight,\n      COALESCE(pk.attendance_weight, 0.0) as attendance_weight,\n      COALESCE(pk.stage_weight, 0.0) as stage_weight,\n      COALESCE(usp.quiz_score, 0) as quiz_score,\n      usp.completed_at as quiz_completed_at,\n      -- Tiebreaker: use quiz completion timing if available\n      CASE WHEN usp.completed_at IS NOT NULL THEN\n        EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - usp.completed_at)) * 1000\n      ELSE 0 END as quiz_timing_score\n    FROM users u\n    INNER JOIN accounts a ON a.id = u.id\n    CROSS JOIN profil_kats pk \n    LEFT JOIN stages s ON s.profil_id = pk.id\n    LEFT JOIN user_stage_progress usp ON usp.user_id = u.id AND usp.stage_id = s.id AND usp.status = 'completed'\n    WHERE pk.profil_number IN (1, 2, 3, 4, 5)\n      AND a.role = 'user'\n  ),\n  user_attendance_scores AS (\n    SELECT \n      u.id as user_id,\n      pk.profil_number,\n      COALESCE(AVG(CASE WHEN ua.status = 'hadir' THEN 100.0 ELSE 0.0 END), 0.0) as avg_attendance_score,\n      MAX(ua.updated_at) as last_attendance_at,\n      -- Tiebreaker: sum of milliseconds from attendance deadline to check-in (earlier = higher score)\n      COALESCE(SUM(\n        CASE WHEN ua.status = 'hadir' THEN\n          EXTRACT(EPOCH FROM ((a.start_time + INTERVAL '1 minute' * a.duration_minutes) - ua.updated_at)) * 1000\n        ELSE 0 END\n      ), 0) as attendance_timing_score\n    FROM users u\n    INNER JOIN accounts acc ON acc.id = u.id\n    CROSS JOIN profil_kats pk\n    LEFT JOIN profil_kat_attendance pka ON pka.profil_kat_id = pk.id\n    LEFT JOIN attendances a ON a.id = pka.attendance_id\n    LEFT JOIN user_attendance ua ON ua.schedule_id = a.id AND ua.user_id = u.id\n    WHERE pk.profil_number IN (1, 2, 3, 4, 5)\n      AND a.start_time <= NOW()\n      AND acc.role = 'user'\n    GROUP BY u.id, pk.profil_number\n  ),\n  user_attendance_total AS (\n    SELECT\n      ua.user_id,\n      COUNT(*) AS attendance_total\n    FROM user_attendance ua\n    INNER JOIN attendances a ON a.id = ua.schedule_id\n    INNER JOIN users u ON u.id = ua.user_id\n    INNER JOIN accounts acc ON acc.id = u.id\n    WHERE ua.status = 'hadir'\n      AND a.start_time <= NOW()\n      AND acc.role = 'user'\n    GROUP BY ua.user_id\n  ),\n  user_scores AS (\n    SELECT \n      u.id as user_id,\n      u.nim,\n      u.full_name,\n      u.fakultas,\n      u.keluarga,\n      u.bata,\n      u.rumpun,\n      u.foto_media_id,\n      \n      -- Profil 1 scores (all with COALESCE to ensure NOT NULL)\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 1 THEN uqs.quiz_weight END), 0.0) as profil1_quiz_weight,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 1 THEN uqs.quiz_score END), 0) as profil1_quiz_score,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 1 THEN uqs.assignment_weight END), 0.0) as profil1_assignment_weight,\n      COALESCE(MAX(CASE WHEN uas.profil_number = 1 THEN uas.avg_assignment_score END), 0.0) as profil1_avg_assignment_score,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 1 THEN uqs.attendance_weight END), 0.0) as profil1_attendance_weight,\n      COALESCE(MAX(CASE WHEN uats.profil_number = 1 THEN uats.avg_attendance_score END), 0.0) as profil1_avg_attendance_score,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 1 THEN uqs.stage_weight END), 0.0) as profil1_stage_weight,\n      \n      -- Profil 2 scores  \n      COALESCE(MAX(CASE WHEN uqs.profil_number = 2 THEN uqs.quiz_weight END), 0.0) as profil2_quiz_weight,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 2 THEN uqs.quiz_score END), 0) as profil2_quiz_score,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 2 THEN uqs.assignment_weight END), 0.0) as profil2_assignment_weight,\n      COALESCE(MAX(CASE WHEN uas.profil_number = 2 THEN uas.avg_assignment_score END), 0.0) as profil2_avg_assignment_score,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 2 THEN uqs.attendance_weight END), 0.0) as profil2_attendance_weight,\n      COALESCE(MAX(CASE WHEN uats.profil_number = 2 THEN uats.avg_attendance_score END), 0.0) as profil2_avg_attendance_score,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 2 THEN uqs.stage_weight END), 0.0) as profil2_stage_weight,\n      \n      -- Profil 3 scores\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 3 THEN uqs.quiz_weight END), 0.0) as profil3_quiz_weight,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 3 THEN uqs.quiz_score END), 0) as profil3_quiz_score,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 3 THEN uqs.assignment_weight END), 0.0) as profil3_assignment_weight,\n      COALESCE(MAX(CASE WHEN uas.profil_number = 3 THEN uas.avg_assignment_score END), 0.0) as profil3_avg_assignment_score,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 3 THEN uqs.attendance_weight END), 0.0) as profil3_attendance_weight,\n      COALESCE(MAX(CASE WHEN uats.profil_number = 3 THEN uats.avg_attendance_score END), 0.0) as profil3_avg_attendance_score,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 3 THEN uqs.stage_weight END), 0.0) as profil3_stage_weight,\n\n      -- Profil 4 scores\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 4 THEN uqs.quiz_weight END), 0.0) as profil4_quiz_weight,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 4 THEN uqs.quiz_score END), 0) as profil4_quiz_score,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 4 THEN uqs.assignment_weight END), 0.0) as profil4_assignment_weight,\n      COALESCE(MAX(CASE WHEN uas.profil_number = 4 THEN uas.avg_assignment_score END), 0.0) as profil4_avg_assignment_score,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 4 THEN uqs.attendance_weight END), 0.0) as profil4_attendance_weight,\n      COALESCE(MAX(CASE WHEN uats.profil_number = 4 THEN uats.avg_attendance_score END), 0.0) as profil4_avg_attendance_score,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 4 THEN uqs.stage_weight END), 0.0) as profil4_stage_weight,\n\n      -- Profil 5 scores\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 5 THEN uqs.quiz_weight END), 0.0) as profil5_quiz_weight,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 5 THEN uqs.quiz_score END), 0) as profil5_quiz_score,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 5 THEN uqs.assignment_weight END), 0.0) as profil5_assignment_weight,\n      COALESCE(MAX(CASE WHEN uas.profil_number = 5 THEN uas.avg_assignment_score END), 0.0) as profil5_avg_assignment_score,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 5 THEN uqs.attendance_weight END), 0.0) as profil5_attendance_weight,\n      COALESCE(MAX(CASE WHEN uats.profil_number = 5 THEN uats.avg_attendance_score END), 0.0) as profil5_avg_attendance_score,\n      COALESCE(MAX(CASE WHEN uqs.profil_number = 5 THEN uqs.stage_weight END), 0.0) as profil5_stage_weight,\n\n      -- Last activity timestamps\n      MAX(CASE WHEN uqs.profil_number = 1 THEN GREATEST(COALESCE(uqs.quiz_completed_at, '1970-01-01'::timestamp), COALESCE(uas.last_assignment_at, '1970-01-01'::timestamp), COALESCE(uats.last_attendance_at, '1970-01-01'::timestamp)) END) as profil1_last_activity,\n      MAX(CASE WHEN uqs.profil_number = 2 THEN GREATEST(COALESCE(uqs.quiz_completed_at, '1970-01-01'::timestamp), COALESCE(uas.last_assignment_at, '1970-01-01'::timestamp), COALESCE(uats.last_attendance_at, '1970-01-01'::timestamp)) END) as profil2_last_activity,\n      MAX(CASE WHEN uqs.profil_number = 3 THEN GREATEST(COALESCE(uqs.quiz_completed_at, '1970-01-01'::timestamp), COALESCE(uas.last_assignment_at, '1970-01-01'::timestamp), COALESCE(uats.last_attendance_at, '1970-01-01'::timestamp)) END) as profil3_last_activity,\n      MAX(CASE WHEN uqs.profil_number = 4 THEN GREATEST(COALESCE(uqs.quiz_completed_at, '1970-01-01'::timestamp), COALESCE(uas.last_assignment_at, '1970-01-01'::timestamp), COALESCE(uats.last_attendance_at, '1970-01-01'::timestamp)) END) as profil4_last_activity,\n      MAX(CASE WHEN uqs.profil_number = 5 THEN GREATEST(COALESCE(uqs.quiz_completed_at, '1970-01-01'::timestamp), COALESCE(uas.last_assignment_at, '1970-01-01'::timestamp), COALESCE(uats.last_attendance_at, '1970-01-01'::timestamp)) END) as profil5_last_activity,\n\n      -- Tiebreaker timing scores (accumulation of milliseconds)\n      COALESCE(SUM(CASE WHEN uqs.profil_number = 1 THEN uqs.quiz_timing_score END), 0) +\n      COALESCE(SUM(CASE WHEN uas.profil_number = 1 THEN uas.assignment_timing_score END), 0) +\n      COALESCE(SUM(CASE WHEN uats.profil_number = 1 THEN uats.attendance_timing_score END), 0) as profil1_timing_score,\n      \n      COALESCE(SUM(CASE WHEN uqs.profil_number = 2 THEN uqs.quiz_timing_score END), 0) +\n      COALESCE(SUM(CASE WHEN uas.profil_number = 2 THEN uas.assignment_timing_score END), 0) +\n      COALESCE(SUM(CASE WHEN uats.profil_number = 2 THEN uats.attendance_timing_score END), 0) as profil2_timing_score,\n      \n      COALESCE(SUM(CASE WHEN uqs.profil_number = 3 THEN uqs.quiz_timing_score END), 0) +\n      COALESCE(SUM(CASE WHEN uas.profil_number = 3 THEN uas.assignment_timing_score END), 0) +\n      COALESCE(SUM(CASE WHEN uats.profil_number = 3 THEN uats.attendance_timing_score END), 0) as profil3_timing_score,\n      \n      COALESCE(SUM(CASE WHEN uqs.profil_number = 4 THEN uqs.quiz_timing_score END), 0) +\n      COALESCE(SUM(CASE WHEN uas.profil_number = 4 THEN uas.assignment_timing_score END), 0) +\n      COALESCE(SUM(CASE WHEN uats.profil_number = 4 THEN uats.attendance_timing_score END), 0) as profil4_timing_score,\n      \n      COALESCE(SUM(CASE WHEN uqs.profil_number = 5 THEN uqs.quiz_timing_score END), 0) +\n      COALESCE(SUM(CASE WHEN uas.profil_number = 5 THEN uas.assignment_timing_score END), 0) +\n      COALESCE(SUM(CASE WHEN uats.profil_number = 5 THEN uats.attendance_timing_score END), 0) as profil5_timing_score,\n\n      COALESCE(uat.attendance_total, 0) as attendance_total\n\n    FROM users u\n    INNER JOIN accounts a ON a.id = u.id\n    LEFT JOIN user_quiz_scores uqs ON uqs.user_id = u.id\n    LEFT JOIN user_assignment_scores uas ON uas.user_id = u.id AND uas.profil_number = uqs.profil_number\n    LEFT JOIN user_attendance_scores uats ON uats.user_id = u.id AND uats.profil_number = uqs.profil_number\n    LEFT JOIN user_attendance_total uat ON uat.user_id = u.id\n    WHERE a.role = 'user'\n    GROUP BY u.id, u.nim, u.full_name, u.fakultas, u.keluarga, u.bata, u.rumpun, u.foto_media_id, uat.attendance_total\n  )\n  SELECT \n    user_id,\n    nim,\n    full_name,\n    fakultas,\n    keluarga,\n    bata,\n    rumpun,\n    foto_media_id,\n    profil1_quiz_weight,\n    profil1_quiz_score,\n    profil1_assignment_weight,\n    profil1_avg_assignment_score,\n    profil1_attendance_weight,\n    profil1_avg_attendance_score,\n    -- Normalized scoring for profil 1\n    CASE \n      WHEN (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight) > 0 THEN\n        ((profil1_quiz_weight / (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight)) * profil1_quiz_score) +\n        ((profil1_assignment_weight / (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight)) * profil1_avg_assignment_score) +\n        ((profil1_attendance_weight / (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight)) * profil1_avg_attendance_score)\n      ELSE 0.0\n    END as profil1_total_score,\n    \n    profil2_quiz_weight,\n    profil2_quiz_score,\n    profil2_assignment_weight,\n    profil2_avg_assignment_score,\n    profil2_attendance_weight,\n    profil2_avg_attendance_score,\n    -- Normalized scoring for profil 2\n    CASE \n      WHEN (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight) > 0 THEN\n        ((profil2_quiz_weight / (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight)) * profil2_quiz_score) +\n        ((profil2_assignment_weight / (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight)) * profil2_avg_assignment_score) +\n        ((profil2_attendance_weight / (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight)) * profil2_avg_attendance_score)\n      ELSE 0.0\n    END as profil2_total_score,\n    \n    profil3_quiz_weight,\n    profil3_quiz_score,\n    profil3_assignment_weight,\n    profil3_avg_assignment_score,\n    profil3_attendance_weight,\n    profil3_avg_attendance_score,\n    -- Normalized scoring for profil 3\n    CASE \n      WHEN (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight) > 0 THEN\n        ((profil3_quiz_weight / (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight)) * profil3_quiz_score) +\n        ((profil3_assignment_weight / (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight)) * profil3_avg_assignment_score) +\n        ((profil3_attendance_weight / (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight)) * profil3_avg_attendance_score)\n      ELSE 0.0\n    END as profil3_total_score,\n    \n    profil4_quiz_weight,\n    profil4_quiz_score,\n    profil4_assignment_weight,\n    profil4_avg_assignment_score,\n    profil4_attendance_weight,\n    profil4_avg_attendance_score,\n    -- Normalized scoring for profil 4\n    CASE \n      WHEN (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight) > 0 THEN\n        ((profil4_quiz_weight / (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight)) * profil4_quiz_score) +\n        ((profil4_assignment_weight / (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight)) * profil4_avg_assignment_score) +\n        ((profil4_attendance_weight / (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight)) * profil4_avg_attendance_score)\n      ELSE 0.0\n    END as profil4_total_score,\n    \n    profil5_quiz_weight,\n    profil5_quiz_score,\n    profil5_assignment_weight,\n    profil5_avg_assignment_score,\n    profil5_attendance_weight,\n    profil5_avg_attendance_score,\n    -- Normalized scoring for profil 5\n    CASE \n      WHEN (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight) > 0 THEN\n        ((profil5_quiz_weight / (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight)) * profil5_quiz_score) +\n        ((profil5_assignment_weight / (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight)) * profil5_avg_assignment_score) +\n        ((profil5_attendance_weight / (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight)) * profil5_avg_attendance_score)\n      ELSE 0.0\n    END as profil5_total_score,\n    \n    -- Total score across all profils with normalized weights\n    ((CASE \n      WHEN (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight) > 0 THEN\n        ((profil1_quiz_weight / (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight)) * profil1_quiz_score) +\n        ((profil1_assignment_weight / (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight)) * profil1_avg_assignment_score) +\n        ((profil1_attendance_weight / (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight)) * profil1_avg_attendance_score)\n      ELSE 0.0\n    END) + \n    (CASE \n      WHEN (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight) > 0 THEN\n        ((profil2_quiz_weight / (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight)) * profil2_quiz_score) +\n        ((profil2_assignment_weight / (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight)) * profil2_avg_assignment_score) +\n        ((profil2_attendance_weight / (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight)) * profil2_avg_attendance_score)\n      ELSE 0.0\n    END) + \n    (CASE \n      WHEN (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight) > 0 THEN\n        ((profil3_quiz_weight / (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight)) * profil3_quiz_score) +\n        ((profil3_assignment_weight / (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight)) * profil3_avg_assignment_score) +\n        ((profil3_attendance_weight / (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight)) * profil3_avg_attendance_score)\n      ELSE 0.0\n    END) + \n    (CASE \n      WHEN (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight) > 0 THEN\n        ((profil4_quiz_weight / (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight)) * profil4_quiz_score) +\n        ((profil4_assignment_weight / (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight)) * profil4_avg_assignment_score) +\n        ((profil4_attendance_weight / (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight)) * profil4_avg_attendance_score)\n      ELSE 0.0\n    END) + \n    (CASE \n      WHEN (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight) > 0 THEN\n        ((profil5_quiz_weight / (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight)) * profil5_quiz_score) +\n        ((profil5_assignment_weight / (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight)) * profil5_avg_assignment_score) +\n        ((profil5_attendance_weight / (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight)) * profil5_avg_attendance_score)\n      ELSE 0.0\n    END)) as total_score,\n\n    ((CASE \n      WHEN (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight) > 0 THEN\n        ((profil1_quiz_weight / (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight)) * profil1_quiz_score) +\n        ((profil1_assignment_weight / (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight)) * profil1_avg_assignment_score) +\n        ((profil1_attendance_weight / (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight)) * profil1_avg_attendance_score)\n      ELSE 0.0\n    END) * profil1_stage_weight + \n    (CASE \n      WHEN (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight) > 0 THEN\n        ((profil2_quiz_weight / (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight)) * profil2_quiz_score) +\n        ((profil2_assignment_weight / (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight)) * profil2_avg_assignment_score) +\n        ((profil2_attendance_weight / (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight)) * profil2_avg_attendance_score)\n      ELSE 0.0\n    END) * profil2_stage_weight + \n    (CASE \n      WHEN (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight) > 0 THEN\n        ((profil3_quiz_weight / (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight)) * profil3_quiz_score) +\n        ((profil3_assignment_weight / (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight)) * profil3_avg_assignment_score) +\n        ((profil3_attendance_weight / (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight)) * profil3_avg_attendance_score)\n      ELSE 0.0\n    END) * profil3_stage_weight + \n    (CASE \n      WHEN (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight) > 0 THEN\n        ((profil4_quiz_weight / (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight)) * profil4_quiz_score) +\n        ((profil4_assignment_weight / (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight)) * profil4_avg_assignment_score) +\n        ((profil4_attendance_weight / (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight)) * profil4_avg_attendance_score)\n      ELSE 0.0\n    END) * profil4_stage_weight + \n    (CASE \n      WHEN (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight) > 0 THEN\n        ((profil5_quiz_weight / (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight)) * profil5_quiz_score) +\n        ((profil5_assignment_weight / (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight)) * profil5_avg_assignment_score) +\n        ((profil5_attendance_weight / (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight)) * profil5_avg_attendance_score)\n      ELSE 0.0\n    END) * profil5_stage_weight) as total_weighted_score,\n    \n    -- Tiebreaker score: total timing across all profils (higher = completed tasks earlier)\n    ((profil1_timing_score + profil2_timing_score + profil3_timing_score + profil4_timing_score + profil5_timing_score) / 1000.0) as tiebreaker_score,\n    \n    attendance_total,\n\n    -- Latest activity timestamp\n    GREATEST(\n      COALESCE(profil1_last_activity, '1970-01-01'::timestamp),\n      COALESCE(profil2_last_activity, '1970-01-01'::timestamp),\n      COALESCE(profil3_last_activity, '1970-01-01'::timestamp),\n      COALESCE(profil4_last_activity, '1970-01-01'::timestamp),\n      COALESCE(profil5_last_activity, '1970-01-01'::timestamp)\n    ) as last_activity_at,\n    \n    ROW_NUMBER() OVER (ORDER BY \n      -- Primary sort: total score (higher is better)\n      (CASE \n        WHEN (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight) > 0 THEN\n          ((profil1_quiz_weight / (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight)) * profil1_quiz_score) +\n          ((profil1_assignment_weight / (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight)) * profil1_avg_assignment_score) +\n          ((profil1_attendance_weight / (profil1_quiz_weight + profil1_assignment_weight + profil1_attendance_weight)) * profil1_avg_attendance_score)\n        ELSE 0.0\n      END) + \n      (CASE \n        WHEN (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight) > 0 THEN\n          ((profil2_quiz_weight / (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight)) * profil2_quiz_score) +\n          ((profil2_assignment_weight / (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight)) * profil2_avg_assignment_score) +\n          ((profil2_attendance_weight / (profil2_quiz_weight + profil2_assignment_weight + profil2_attendance_weight)) * profil2_avg_attendance_score)\n        ELSE 0.0\n      END) + \n      (CASE \n        WHEN (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight) > 0 THEN\n          ((profil3_quiz_weight / (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight)) * profil3_quiz_score) +\n          ((profil3_assignment_weight / (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight)) * profil3_avg_assignment_score) +\n          ((profil3_attendance_weight / (profil3_quiz_weight + profil3_assignment_weight + profil3_attendance_weight)) * profil3_avg_attendance_score)\n        ELSE 0.0\n      END) + \n      (CASE \n        WHEN (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight) > 0 THEN\n          ((profil4_quiz_weight / (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight)) * profil4_quiz_score) +\n          ((profil4_assignment_weight / (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight)) * profil4_avg_assignment_score) +\n          ((profil4_attendance_weight / (profil4_quiz_weight + profil4_assignment_weight + profil4_attendance_weight)) * profil4_avg_attendance_score)\n        ELSE 0.0\n      END) + \n      (CASE \n        WHEN (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight) > 0 THEN\n          ((profil5_quiz_weight / (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight)) * profil5_quiz_score) +\n          ((profil5_assignment_weight / (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight)) * profil5_avg_assignment_score) +\n          ((profil5_attendance_weight / (profil5_quiz_weight + profil5_assignment_weight + profil5_attendance_weight)) * profil5_avg_attendance_score)\n        ELSE 0.0\n      END) DESC,\n      -- Tiebreaker: timing score (higher = completed tasks earlier)\n      (profil1_timing_score + profil2_timing_score + profil3_timing_score + profil4_timing_score + profil5_timing_score) DESC,\n      -- Final tiebreaker: latest activity\n      GREATEST(\n        COALESCE(profil1_last_activity, '1970-01-01'::timestamp),\n        COALESCE(profil2_last_activity, '1970-01-01'::timestamp),\n        COALESCE(profil3_last_activity, '1970-01-01'::timestamp),\n        COALESCE(profil4_last_activity, '1970-01-01'::timestamp),\n        COALESCE(profil5_last_activity, '1970-01-01'::timestamp)\n      ) DESC\n    ) as ranking\n  FROM user_scores\n  ORDER BY ranking\n",
      "materialized": true,
      "isExisting": false
    }
  },
  "sequences": {},
  "roles": {},
  "policies": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}